package validator

import (
	"time"
	"zelonis/external"
)

var genesisParentHash = []byte{
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
}

func (vn *Validator) generateGenesis() *external.Block {

	header := &external.Header{
		BlockHeight: 0,
		BlockTime:   1747288659000,
		BlockHash: []byte{
			0x02, 0x59, 0x14, 0xb2, 0x91, 0x02, 0x05, 0x7b,
			0x72, 0x6f, 0x0f, 0x9b, 0x67, 0x65, 0xab, 0xa6,
			0xb0, 0x1c, 0xce, 0xd4, 0x76, 0x51, 0x2a, 0x1e,
			0x34, 0xcd, 0xc5, 0x0b, 0x68, 0xfc, 0xb0, 0x47,
		},
		ParentSlot: 0,
		ParentHash: genesisParentHash,
		Version:    0,
	}
	
	var gensisMiner = []byte{
		0x48, 0x31, 0x38, 0x47, 0x37, 0x56, 0x32, 0x4b,
		0x65, 0x4b, 0x35, 0x66, 0x50, 0x32, 0x5a, 0x52,
		0x7a, 0x4e, 0x4b, 0x33, 0x43, 0x7a, 0x57, 0x46,
		0x74, 0x41, 0x79, 0x44, 0x56, 0x46, 0x42, 0x64,
		0x71, 0x73, 0x38, 0x70, 0x72, 0x58, 0x72, 0x56,
		0x61, 0x52, 0x43, 0x66,
	}
	var premint = []byte{53, 48, 48, 48, 48, 48, 48, 48, 48}
	inpoint := &external.Inpoint{
		PubKey:        concensuSender,
		Value:         premint,
		PrevBlockHash: genesisParentHash,
	}
	//Generate tx hash
	transaction := &external.Transaction{
		Inpoint: inpoint,
		Outpoints: []*external.Outpoint{
			{
				PubKey: gensisMiner,
				Value:  inpoint.Value,
			},
		},
		Signature: []byte{
			0x56, 0xc3, 0x34, 0xe8, 0xdb, 0x86, 0x97, 0xb5,
			0xda, 0x02, 0x11, 0x08, 0x1a, 0xd9, 0xce, 0x00,
			0xc4, 0x88, 0xb9, 0x20, 0xa2, 0xa1, 0x40, 0xf2,
			0xd2, 0x4f, 0x51, 0x61, 0xb6, 0x1e, 0x6e, 0xa3,
		},
		Fee: nil,
	}
	//txByte, _ := json.Marshal(transaction)
	//signHash := blake2b.Sum256(txByte)

	gensis := &external.Block{
		Header: header,
		Transactions: []*external.Transaction{
			transaction,
		},
		Validator: &external.ValidatorInfo{
			Pubkey:            gensisMiner,
			PreviousBlockHash: genesisParentHash,
		},
		Signature: []byte{
			0xb2, 0x9e, 0xa5, 0x73, 0x69, 0x29, 0x72, 0x56,
			0x69, 0xc2, 0x7f, 0x16, 0x91, 0x84, 0x22, 0x4c,
			0xea, 0xbf, 0xa9, 0x71, 0xc9, 0x73, 0x63, 0xd0,
			0xbd, 0x58, 0x9f, 0x76, 0xf8, 0xdc, 0x05, 0x67,
		},
		RecivedAt:   time.UnixMilli(header.BlockTime),
		RecivedFrom: nil,
	}
	return gensis
}
